workflows:
  react-native-android:
    name: React Native Android
    max_build_duration: 120
    instance_type: mac_mini
    environment:
      vars:
        # GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(...) # <-- Put encrypted CONTENTS of your Gloud crendentials file here
        PACKAGE_NAME: "com.testcodemagic" # <-- Put your package name here e.g. com.domain.myapp
        FCI_KEYSTORE: debug.keystore # <-- Put your encrypted keystore file here
        FCI_KEYSTORE_PASSWORD: android # <-- Put your encrypted keystore password here
        FCI_KEY_ALIAS: androiddebugkey # <-- Put your encrypted keystore alias password here
        FCI_KEY_ALIAS_PASSWORD: android
        # CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
      node: latest
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: dev
          include: true
          source: true
    scripts:
      - name: Install npm dependencies
        script: |
          npm install
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
      - name: Set up keystore
        script: |
          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
          # storePassword=$FCI_KEYSTORE_PASSWORD
          keyPassword=$FCI_KEYSTORE_PASSWORD
          keyAlias=$FCI_KEY_ALIAS
          storeFile=/tmp/keystore.keystore
          EOF
      - name: Build Android release
        script: |
          # Set environment variable so it can be used to increment build number in android/app/build.gradle
          # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
          # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
          # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
          cd android && ./gradlew assembleRelease
    artifacts:
      - android/app/build/outputs/**/*.apk
    # publishing:
    #   slack:
    #     channel: "#app-publish"
    #     notify_on_build_start: true # To receive a notification when a build starts
    #     notify:
    #       success: true # To not receive a notification when a build succeeds
    #       failure: true # To not receive a notification when a build fails
